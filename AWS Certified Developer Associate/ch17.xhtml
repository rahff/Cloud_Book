<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:svg="http://www.w3.org/2000/svg" lang="en" xml:lang="en">
<head>
<title>AWS Certified Developer Associate All-in-One Exam Guide (Exam DVA-C01)</title>
<link href="1260460177.css" rel="stylesheet" type="text/css"/>
<meta content="urn:uuid:c4d348f1-9c3d-457f-b76a-654174c9fde1" name="Adept.expected.resource"/>
</head>
<body>
<section epub:type="chapter">
<h2 class="h2c" id="ch17"><span epub:type="pagebreak" id="page_437"/><span class="chap">CHAPTER <span class="chap1">17</span></span></h2>
<h2 class="h2c1">Monitoring Using Amazon CloudWatch, AWS CloudTrail, and AWS Config</h2>
<p class="noindent">In this chapter, you will learn</p>
<p class="bulleta">• Amazon CloudWatch</p>
<p class="bulleta">• AWS CloudTrail</p>
<p class="bulleta">• AWS Config</p>
<p class="hr"/>
<p class="noindentb">This chapter explains in depth how Amazon CloudWatch, AWS CloudTrail, and AWS Config services work.</p>
<h3 class="h3" id="ch17lev1sec1">Amazon CloudWatch</h3>
<p class="noindent">You can monitor all your AWS resources, collect and track metrics, and create alarms and dashboards to display all metrics in real time using Amazon CloudWatch. You can also monitor running applications, and you can configure notifications to be sent when a threshold is reached. You can also automatically make changes to the resources that you are monitoring based on threshold changes. For example, you can launch additional EC2 instances based on CPU usage to handle increased traffic. You can see AWS resource utilization, health, and performance, and you can use this data to scale down underused instances—for example, you can change to a smaller instance to save money. You can access Amazon CloudWatch using the AWS console, AWS Command Line Interface (CLI), AWS software development kit (SDKs), and Amazon CloudWatch application programming interface (API). You can use Amazon Simple Notification Service (SNS) along with Amazon CloudWatch to send messages to subscribed clients when an alarm threshold is reached. You can use Amazon EC2 Auto Scaling along with Amazon CloudWatch to automatically launch new Amazon EC2 instances based on user-defined policies or to terminate existing Amazon EC2 instances based on health status checks, or scale up your Amazon EC2 instances based on demand. You can use AWS CloudTrail <span epub:type="pagebreak" id="page_438"/>with Amazon CloudWatch to monitor all API calls made to your account and write the log files to your Amazon S3 bucket.</p>
<p class="indent">Amazon CloudWatch is a repository where all AWS services send their metrics continuously, in addition to the custom metrics that you configured, and you can use metrics to calculate statistics and present them graphically in your CloudWatch dashboard. Amazon EC2 instances can be stopped, started, or terminated based on alarm thresholds. All Amazon CloudWatch metrics are stored in specific regions separately, and you can aggregate statistics from different regions by using Amazon CloudWatch’s cross-region functionality.</p>
<h4 class="h4" id="ch17lev2sec1">Metrics</h4>
<p class="noindent">Metrics are time series data that are published to CloudWatch. It is similar to a data point variable representing the values from an application or business activities that are sent to CloudWatch in addition to your custom metrics. The data points can be in any order and at any rate, but you can retrieve them as an ordered set of time-series data. Metrics automatically expire after 15 months, and as new data points arrive, the older data is dropped. Each data point in a metric has a unique name, namespace, timestamp, and dimension. The resolution of data points is based on the period—more granular metrics are available for shorter periods. The metrics are available based on the granularity, so if a metrics granularity is less than 60 seconds, they are only available for 3 hours, 1-minute granular metrics are available for 15 days, 5-minute granular metrics are available for 63 days, and 1-hour granular metrics are available for 15 months.</p>
<p class="indent">Many of the AWS services provide metrics, which is data about your system performance. Free monitoring is enabled by default that provides metrics in five-minute intervals, but you can enable detailed monitoring that provides metrics in one-minute intervals for an additional charge. All the AWS resource metrics and custom application metrics are stored in Amazon CloudWatch from where you can perform a search, create graphs, and set up alarms. Metrics are grouped by namespace and then by dimensions within each namespace, and you can search for metrics that have a matching namespace, metric name, or dimensions.</p>
<h5 class="h5">Custom Metrics</h5>
<p class="noindent">AWS CLI or an API can be used to publish your own metrics to CloudWatch, and you can use the AWS Management Console to view statistical graphs of your published custom metrics. The custom metrics are stored in CloudWatch as a series of data points along with a timestamp. A custom metrics statistic set, which is an aggregated set of data points, can be published as well.</p>
<h5 class="h5">High-Resolution Metrics</h5>
<p class="noindent">Amazon CloudWatch metrics can be either standard resolution, with one-minute granularity data points, or high resolution, with a granularity of one second. By default, all the metrics produced by your AWS services are standard resolution. You can use either standard resolution or high resolution for your custom metrics. If you want to publish high-resolution custom metrics, you need to use the PutMetricData call, which incurs <span epub:type="pagebreak" id="page_439"/>additional charges. So, higher resolution can lead to higher charges, since you need to call PutMetricData multiple times.</p>
<p class="noindentt"><strong>Namespaces</strong>   A namespace acts as a container, where metrics in different namespaces are isolated from each other. For example, Amazon EC2 uses AWS/EC2 as the namespace and Amazon S3 uses AWS/S3 as the namespace to avoid metrics from different services being mistakenly aggregated into the same statistics. You need to specify a custom namespace for each data point you publish from your application to CloudWatch that can be used when you create a metric.</p>
<p class="noindentt"><strong>Timestamps</strong>   For time-series data, all metric data points contain a timestamp that can be provided by you, or CloudWatch can create it when the data point arrives in UTC (Coordinated Universal Time) format.</p>
<p class="noindentt"><strong>Sum</strong>   This is the combination of all the metrics and is used to determine the total volume of a metric.</p>
<p class="noindentt"><strong>SampleCount</strong>   This is the number of data points used in a calculation.</p>
<p class="noindentt"><strong>Dimensions</strong>   This is a name and value pair used to identify a metric part, and each metric can have up to ten dimensions. Dimensions are part of the unique identifier for a metric, and you can create a new variation of a metric by adding a unique name and value pair, which can be used to filter the CloudWatch results. For example, you can use EC2 InstanceID to get statistics for a particular EC2 instance while searching for metrics, and CloudWatch can aggregate data based on the dimension. Even if the metrics have the same name, each unique combination of dimensions is treated as a separate metric by CloudWatch.</p>
<p class="noindentt"><strong>Statistics</strong>   This is the aggregation of metrics over a period of time using the namespace, metric name, dimensions, and data point unit of measure. The statistics are provided by CloudWatch based on the custom metric data points or by other AWS services. You can aggregate the metrics across multiple resources within the same region but not across regions. EC2 instances statistics have detailed monitoring enabled for an additional charge, so you can monitor total bytes written to disk or average CPU utilization for all instances over 60-second time intervals for a one-day period.</p>
<p class="noindentt"><strong>Average</strong>   This is the value of Sum / SampleCount that can be used to find the full scope of a metric and to find how close this is to the average use so you can determine when to increase or decrease your resources as needed.</p>
<p class="noindentt"><strong>Units</strong>   This is a unit of measure in bytes, seconds, count, and percent used by statistics that provides a meaning to your metrics data and is aggregated separately. When you create a custom metric, you need specify a unit; otherwise, the unit will be updated as None by CloudWatch.</p>
<p class="noindentt"><strong>Periods</strong>   This is the length of time associated with a particular statistic defined in numbers of seconds, varying from 1 second to 86,400 seconds (one day). The custom metrics support sub-minute periods, and you can specify a period, with a start time and <span epub:type="pagebreak" id="page_440"/>end time, when you retrieve statistics. CloudWatch compares the metric with the threshold value when an alarm is created to monitor a particular metric. For example, CloudWatch doesn’t notify you until five failures are found when you specify five evaluation periods.</p>
<p class="noindentt"><strong>Aggregation</strong>   Statistics are aggregated based on the period when they are retrieved. The data points can be published with the same timestamps or namespace and dimensions. Multiple data points can be published with any timestamp for the same or different metrics. You can insert a pre-aggregated statistic set with Min, Max, and Sum for data points when collecting data many times in a minute. Amazon CloudWatch treats these as a single metric when you publish a metric with the same namespace and dimensions from different sources that is used for service metrics of a distributed and scaled system, which in turn allows you to get the statistics for Min, Max, Avg, and Sum of all requests across your application.</p>
<p class="noindentt"><strong>Percentiles</strong>   This is the relative value in a data set used to isolate anomalies. For example, the 75th percentile indicates that 25 percent of data is higher than 75 percent of the data based on the distribution of your metric data. When monitoring the CPU utilization of your EC2 instances, for example, you need to monitor the Max to find a single anomaly from the results. Percentile statistics are available for custom metrics but are not available for negative number values.</p>
<p class="noindentt"><strong>Alarms</strong>   Alarms are used to automatically initiate actions after watching a single metric over a specified period, based on the threshold value over time. The action can be a notification e-mail or creating or terminating an instance using the Auto Scaling policy. CloudWatch alarms invoke actions only when the state is changed and are maintained for a particular number of periods. You need to select a frequency for the metric to be monitored when creating an alarm—for basic monitoring, metrics are available every five minutes, and for detailed monitoring, metrics are available every one minute. You can create a high-resolution metric alarm with a period of five seconds, which is free, or for ten seconds, which incurs an additional charge.</p>
<p class="noindentt"><strong>Alarm States</strong>   An alarm has the following possible states:</p>
<p class="bullett">• <strong>OK</strong>   Specifies the metric is within the threshold.</p>
<p class="bulleta">• <strong>ALARM</strong>   Specifies the metric is outside of the threshold.</p>
<p class="bulleta">• <strong>INSUFFICIENT_DATA</strong>   Specifies the alarm has just started, not enough data is available, or the metric is not available to determine the alarm state.</p>
<p class="noindentt"><strong>Dashboards</strong>   Amazon CloudWatch dashboards are used to monitor in a single view resources that are spread across different regions, and you can create customized views of the metrics and alarms to help assess the health of your applications and resources across one or more regions. You can easily track the same metric across multiple graphs by using different colors on each graph. Dashboards can be created by using the console, AWS CLI, or API, which provide a common view of critical resource and application measurements that can be shared for faster communication during any operational event. You can use a cross-account, cross-region dashboard to summarize data from multiple AWS accounts <span epub:type="pagebreak" id="page_441"/>and multiple regions. You can drill down for more specific details in addition to getting an overview of your application without switching regions or accounts. Graphs that represent one or more metrics can be added, resized, edited, removed, or temporarily hidden from your dashboard for resource monitoring.</p>
<p class="noindentt"><strong>Graphs</strong>   You can use graphs to see the metric activity of your services, and these are created using the CloudWatch console by selecting metrics data as Min, Max, Avg, and Sum. Graphs can display different levels of detail, ranging from a one-minute view, which can be useful when troubleshooting, to a one-hour view, which can be useful when seeing trends over time.</p>
<p class="noindentt"><strong>Dynamic Labels</strong>   Dynamic labels can be added for the selected metrics in graphs. The values are derived from the time range, including minimum, maximum, average, and sum, which is updated automatically when either the graph or dashboard is refreshed. Dynamic labels are attached to every metric in the search expression. You can easily add, edit, and change the position or include other customization of a dynamic label using the CloudWatch console.</p>
<p class="noindentt"><strong>Dimensions</strong>   You can have up to ten dimensions for each custom metric, which defines what the metric is and what data it stores by using a name and value pair. You can use the <span class="code">list-metrics</span> command to list what dimensions are defined for each metric. For example, the following is the command for two dimensions:</p>
<p class="imagep"><img alt="images" src="p0441-01.jpg"/></p>
<p class="indent">The following command can be used to retrieve statistics for multiple dimensions:</p>
<p class="imagep"><img alt="images" src="p0441-02.jpg"/></p>
<p class="noindentt"><strong>Single Data Points</strong>   You can use the <span class="code">put-metric-data</span> command to publish a single data point for a new or existing metric using one value and timestamp. The data points with timestamps are aggregated to a granularity of one second by CloudWatch, which records the average for each period. The <span class="code">get-metric-statistics</span> command is used to retrieve statistics based on the data points, and you can aggregate your data or aggregate as statistic set using the <span class="code">--statistic-values</span> parameter before publishing it to CloudWatch. You can’t retrieve percentile statistics if you publish data using a statistic set, and you can publish zeros by including data points with the value 0.</p>
<p class="noindentt"><strong>Metric Math</strong>   Metric math uses math expressions to create new time-series data based on the metrics and enables you to query multiple CloudWatch metrics. You can add the time series to dashboards and visualize them on the CloudWatch console or programmatically using the GetMetricData API call.</p>
<p class="noindentt"><strong>Anomaly Detection</strong>   You can use CloudWatch to create an alarm that mines past metric data and creates an anomaly detection model of expected values. CloudWatch <span epub:type="pagebreak" id="page_442"/>uses an anomaly detection threshold with the model to determine the abnormal value from the metric and trigger a notification e-mail when the metric value is either above or below the expected value.</p>
<h4 class="h4" id="ch17lev2sec2">CloudWatch Agent</h4>
<p class="noindent">The CloudWatch agent collects system-level metrics from Amazon EC2 instances across operating systems including on-premises servers not managed by AWS. You can use the CloudWatch agent to retrieve custom metrics from your applications or from the StatsD protocol, which supports both Windows and Linux server statistics, and the collected protocol, which only supports Linux servers. The CloudWatch agent metrics can be stored in CloudWatch, and by default, it uses CWAgent as the namespace for metrics, but you can define another namespace during CloudWatch agent configuration. The logs from the CloudWatch agents are processed and stored in Amazon CloudWatch logs, and they are billed as custom metrics. You need to create a CloudWatch agent configuration JSON file that specifies the custom metrics and logs before installing the CloudWatch agent on any servers. CloudWatch agents can be installed on both Amazon EC2 instances and on-premises servers with either the Linux or Windows operating system.</p>
<h4 class="h4" id="ch17lev2sec3">Data Protection</h4>
<p class="noindent">AWS recommends that you secure your data by using multifactor authentication (MFA), Transport Layer Security (TLS) for communication, AWS CloudTrail for API and user activity logging, AWS encryption solutions, and Amazon Macie to discover and secure any personal data stored in your Amazon S3 bucket. AWS strongly recommends never using any sensitive user-identifying information in the logs or metadata and never including credentials in the URL to validate your request to an external server. Grafana 6.5.0 or later can be configured and used to query a dynamic list of metrics by using wildcards. You can create multiple dashboards using prebuilt dashboards and graphs to monitor metrics for AWS resources.</p>
<h4 class="h4" id="ch17lev2sec4">Logging</h4>
<p class="noindent">AWS CloudTrail records all actions by API calls, including calls from the CloudWatch console and code calls in CloudWatch. You can enable continuous delivery of your CloudTrail events and CloudWatch events to an Amazon S3 bucket when you create a trail. You can find the request, the IP address, who made the request, and when it was made. The trail log events from all your regions are delivered to your Amazon S3 bucket, and you can analyze and trigger an event from the data collected in CloudTrail logs.</p>
<h3 class="h3" id="ch17lev1sec2">AWS CloudTrail</h3>
<p class="noindent">AWS CloudTrail records all API calls to provide compliance, operational governance, and risk auditing to your AWS account. All actions, including every event in the AWS Management Console, AWS CLI, AWS SDKs, and API calls to an AWS service, are recorded in CloudTrail as events. When you create your AWS account, AWS CloudTrail <span epub:type="pagebreak" id="page_443"/>is enabled automatically and starts recording activities in a CloudTrail event that can be viewed in the CloudTrail console in Event History. You can create a trail to record the ongoing activities and any events in your AWS account. This helps provide visibility of all the activities in your AWS account for security best practices. It enables you to view, search, download, archive, analyze, and respond to account activity across your AWS infrastructure. You can identify who or what service took a particular action on what resources, in addition to identifying when the event occurred in order, to analyze and respond to activity in your AWS account. AWS CloudTrail Insights can be enabled on a trail for an additional cost to identify and respond to any unusual activity. CloudTrail can be integrated into your applications to automate trail creation for your entire organization and to check the status of trails, in addition to controlling how users view CloudTrail events.</p>
<p class="indent">When you create your AWS account and AWS CloudTrail is enabled, all activity is recorded in a CloudTrail event, which as mentioned, can be viewed in the Event History of the CloudTrail console page. You can view, search, and download up to 90 days of activity from Event History, and you can archive, analyze, and respond to changes in your AWS resources by creating a CloudTrail trail, which enables you to store the events to your Amazon S3 bucket. You can use Amazon CloudWatch logs and Amazon CloudWatch events to analyze events in your trail. You can create two types of trails: trails for all regions or trails for one region using the CloudTrail console, CloudTrail API, or AWS CLI. AWS CloudTrail records and stores every event from all regions or for just a single region to your S3 bucket. You can create an organization trail if your AWS account is part of an AWS organization, where all events of all AWS accounts will be logged in that organization for all AWS regions or for a single region, based on the configuration. Since an organization trail is created on the master account, it is automatically applied to all member accounts. This provides an additional security benefit, since the member accounts will only able to see, but cannot modify or delete, the organization trail.</p>
<p class="indent">The configuration of a trail can be changed later as to whether it logs events in one region or all regions, which affects what events are logged. CloudTrail event log files use Amazon S3 server-side encryption (SSE) for encryption, and AWS Key Management Service (AWS KMS) key can also be used to encrypt the log files. You can set up Amazon SNS notifications if you want notifications about log file delivery and validation, and log files are delivered within 15 minutes of account activity. In addition, CloudTrail publishes log files multiple times an hour—about every five minutes. These log files contain API calls from services in the account that support CloudTrail.</p>
<h4 class="h4" id="ch17lev2sec5">The CloudTrail Lifecycle</h4>
<p class="noindent">An activity is an action taken by any user, role, or service that is monitored and captured by AWS CloudTrail. All activities of your AWS account are stored as events in CloudTrail, which provides a history of both API and non-API account activity made through the AWS CLI, AWS, and AWS SDKs. The events are logged as management events and data events in CloudTrail using the JSON log format. The data-plane operations are events that provide information about the resource operations, which is often a high-volume activity like GetObject, DeleteObject, and PutObject Amazon S3 API operations.</p>
<p class="indent"><span epub:type="pagebreak" id="page_444"/>You can capture unusual activity events in your AWS account using CloudTrail Insights, which detects unusual activity, and the Insights events are stored in the S3 bucket of your trail. Insights events are captured and stored only when a change is detected that significantly differs from the account’s typical usage patterns. An Insights event is logged at the start of the unusual activity, along with its relevant API, statics, and incident time to help you understand and act on the identified unusual activity. Another Insights event is logged at the end of the unusual activity, along with its relevant API, statics, and incident time. You must explicitly enable AWS CloudTrail Insights event collection on a new or existing trail, since it is disabled by default. You can view, search, and download CloudTrail event history for up to 90 days to gain visibility of all the actions taken in your AWS account using the AWS CLI, AWS SDK, and AWS Management Console and other AWS services.</p>
<h4 class="h4" id="ch17lev2sec6">Control Access</h4>
<p class="noindent">AWS Identity and Access Management (IAM) can be used to control access to AWS CloudTrail by giving the least amount of privileges needed to do work. You can create multiple individual IAM users and give each IAM user a unique set of security credentials. You can grant different levels of permissions to each IAM user based on their role. Amazon CloudWatch monitors, collects, and tracks metrics of your applications and other resources on your AWS account. You can use Amazon CloudWatch logs to monitor log data.</p>
<p class="indent">Since CloudTrail is integrated with CloudWatch logs, it can send API activity events of your AWS account to the CloudWatch logs group, and it can trigger alarms based on the predefined metric filters, in addition to sending notifications or making changes to your resources. Your application, operating system events, and other AWS services events can be tracked using CloudWatch logs in near real time. Rules can be created to trigger any event recorded by CloudTrail. You need to have at least one trail to send the log data to CloudWatch logs or CloudWatch events. You can create a trail for a single region or all regions—the best practice is to create a trail that applies to all regions. When you create a CloudTrail for all regions, you can easily control the configurations across all AWS regions and use a single S3 bucket. Monitoring log activity across all regions is simple, and any new AWS region is automatically added to your trail. SNS notifications can be delivered to all regions, and log integrity validation can be enabled for the trail. Multiple trails can be created—up to five trails per region—for different line-of-business or user groups.</p>
<p class="indent">As mentioned, all API activity and events will be available for 90 days in the Event History of the CloudTrail console. You can programmatically look up all events related to AWS resource creation, modification, and deletion by using the AWS SDK or AWS CLI. Events cannot be manually deleted from Event History. An AWS IAM user can be used to control the creation, modification, and deletion of AWS CloudTrail trails. You can create an audit user with permission to only view trail activity and restrict them from starting or stopping logging of a trail, which provides granular control over your trails and user access. You can configure CloudTrail to evaluate the events and deliver them to your Amazon S3 bucket or Amazon CloudWatch Logs log group only when the event <span epub:type="pagebreak" id="page_445"/>matches your trail settings. When you have multiple trails, you have the option to designate a trail for data events, another trail for management operation events, and another one for Insights events to capture unusual activities that can be delivered to separate S3 buckets. CloudTrail logs all management events by default, but not data or Insights events, since you incur additional charges for these. You can share your CloudTrail log files between multiple AWS accounts and grant read-only access to the accounts that generated the log files, and you can grant access to all of the log files to a centralized log account that can analyze the log files for your organization. You can validate whether your log file was deleted or modified by using CloudTrail log file integrity validation, which uses the SHA-256 algorithm for hashing and SHA-256 with RSA for digital signing. This feature makes sure that your CloudTrail log files cannot be forged, deleted, or modified without detection and helps with your audit and compliance requirements, in addition to helping with security and forensic investigations.</p>
<h4 class="h4" id="ch17lev2sec7">AWS CloudTrail Security</h4>
<p class="noindent">As a best practice, always use MFA for your accounts and communicate with all your AWS resources only using SSL/TLS. Log all your API and user activities to AWS CloudTrail, but never put any sensitive information, like personally identifiable information, on it because diagnostic logs might be shared with an external user. Use Amazon S3 lifecycle policies to archive or delete old CloudTrail log files automatically after a certain period. Encrypt your CloudTrail log files with AWS KMS keys (SSE-KMS) and enable an Amazon S3 bucket policy for your CloudTrail destination S3 buckets. Always validate CloudTrail log file integrity, especially if you are sharing CloudTrail log files between multiple AWS accounts.</p>
<p class="indent">You need to use centralized logging using a separate AWS account with restricted access to only administrative users and a dedicated Amazon S3 bucket with MFA delete enabled to ensure the integrity, completeness, and availability of CloudTrail logs for auditing and forensic purposes. This allows you to strictly enforce security controls, segregation of duties, and access controls. Limit and restrict the users with the AWSCloudTrailFullAccess, since it gives you the ability to disable or reconfigure important auditing functions. Implement detective controls to make sure all trails are encrypted with SSE-KMS, and configure the lifecycle policy of your Amazon S3 bucket that was used to store CloudTrail log files. Always use the principle of least privilege, and remove any unnecessary access.</p>
<h3 class="h3" id="ch17lev1sec3">AWS Config</h3>
<p class="noindent">AWS Config offers a comprehensive view to quickly determine any configuration or relationship changes over time. It evaluates the desired configurations against the current configurations using a snapshot. You can retrieve either all AWS resources or only few AWS resources for your audit requirements using AWS Config, in addition to retrieving historical configurations and relationships between your AWS resources. It is important to identify all the AWS resources in your AWS account and how they are related to each other, in addition to identifying how each AWS resource is configured both in the <span epub:type="pagebreak" id="page_446"/>present and in the past. You can receive a notification whenever a resource configuration is changed, like create, modify, or delete. AWS Config help you oversee your application resource configurations and detect any misconfigurations. It continuously evaluates and notifies you whenever resources are created, modified, or deleted by polling the calls made to each resource without explicitly monitoring these changes. AWS Config evaluates the configuration settings and sends a notification when it detects any resource violation and flags the resource as noncompliant. AWS Config can be used when your internal policies and best practices require the data to be audited frequently to make sure it complies with the historical configurations.</p>
<p class="indent">AWS Config can monitor all your AWS resources that depend on one another and notify you when a misconfiguration of one resource might have unintended consequences on its other related resources and help you to assess the impact of the configuration change. When you troubleshoot configuration issues for your AWS services, the historical configurations of those AWS services from AWS Config can help you access the last known correct working configuration to resolve the problem.</p>
<h4 class="h4" id="ch17lev2sec8">Security Analysis</h4>
<p class="noindent">When your audit and compliance team analyzes potential security weaknesses in your AWS account, they need detailed historical information about your AWS resource configurations, like EC2 security groups with inbound and outbound port rules that were open at a particular time to determine whether a specific security group is blocking the incoming or allowing the outgoing TCP traffic to and from a specific port, or IAM permissions that are granted to users, groups, or roles to modify certain AWS resources at a specific time to determine whether correct permissions are granted to a user. AWS Config helps you track resource inventory and changes and evaluate configurations of your AWS resources, like Amazon EC2 instances, security groups, Amazon Elastic Block Store (EBS) volumes, and Amazon Virtual Private Cloud (VPCs), and it uses the unique resource identifier known as Amazon Resource Name (ARN).</p>
<h4 class="h4" id="ch17lev2sec9">Resource Configuration</h4>
<p class="noindent">The audit team uses AWS Configs configuration history, which is a collection of the configuration items of all your resources from the beginning of their creation. It is available in multiple formats and can be automatically delivered to your Amazon S3 bucket. You can either use the AWS Config console or use the API to view all previous configurations of any resource using its timeline. A point-in-time view of different attributes, like metadata, current configuration, related events, and relationships, will be available in a AWS Config configuration item. The configuration history is populated as soon as it detects a change to a resource type, like when it is created, updated, or deleted. The configurations of your AWS resources in your account are stored as configuration items by a configuration recorder, which is automatically created and started by AWS Config. You can create, start, stop, and restart the configuration recorder at any time. You can either record all the resources or a set of customized configurations by using the AWS CLI or AWS Management Console.</p>
<h5 class="h5"><span epub:type="pagebreak" id="page_447"/>Configuration Snapshot</h5>
<p class="noindent">You can get a collection of the complete view of your resources from a configuration snapshot, and it will be useful for validating the configuration regularly for resources that potentially should not exist or were incorrectly configured. All configuration items are added to the configuration stream each time your AWS resource is created, modified, or deleted. You can integrate the configuration stream with an Amazon SNS topic based on your requirements. You can use the configuration stream to observe, monitor potential issues, and receive notifications on configuration changes to your AWS resources.</p>
<p class="indent">You can use AWS Config to discover AWS resources from your AWS account and also create a map of relationships between AWS resources. You can create an AWS Config rule with the desired configuration settings of your entire AWS account or a specific AWS resource. AWS Config allows you to create custom rules to track configuration changes by continually monitoring and sending the configuration item a change notification using Amazon SNS. You can aggregate data for multiple AWS accounts and multiple regions using AWS Config to aggregate compliance data and AWS Config configuration and store it in a single account, which will be used to monitor compliance of all your multiple AWS accounts. A source account is the AWS account that you use to aggregate, and the source region is where you want to aggregate all your AWS Config resource configurations and compliance data. You can use the AWS Config aggregator to collect compliance and configuration data from multiple regions and multiple source accounts. A conformance pack, which is a combination of AWS Config rules and remediation actions in YAML (YAML Ain’t Markup Language, which used to be called Yet Another Markup Language) format, can be implemented for a single account or the entire AWS organization using the AWS Config console or the AWS CLI.</p>
<h4 class="h4" id="ch17lev2sec10">Managing AWS Config</h4>
<p class="noindent">The AWS Config console can be used to configure resources, choose an Amazon S3 bucket, and choose an Amazon SNS topic. You can create AWS Config managed rules and custom rules and configuration aggregators, in addition to viewing configuration snapshots and relationships between AWS resources. You can use AWS Config RESTful APIs and AWS CLI to program AWS Config directly. In addition, you can use one of the AWS SDKs to manage errors, retry requests automatically, and sign requests cryptographically.</p>
<p class="indent">AWS Config integrates with AWS IAM to create and manage users and user permissions, including anyone who needs access to AWS Config. AWS IAM allows you to create permission policies to attach to your IAM role, Amazon S3 buckets, and Amazon SNS topics. AWS IAM can be used to create AWS Config permission policies, which is a set of statements that grant AWS Config permissions to attach to the IAM roles. You can also set up read-only permissions using AWS IAM, where users can search for resources by tags or only view the configurations of resources. Resource-level permissions can be used to control when users are allowed to use those actions for specific resources in AWS Config. AWS Config can be used to continuously track configuration changes to check whether they violate any of the conditions and flag it as noncompliant. This helps you ensure that your resource configurations comply with regulations, industry guidelines, and internal practices.</p>
<h4 class="h4" id="ch17lev2sec11"><span epub:type="pagebreak" id="page_448"/>AWS Config Managed and Custom Rules</h4>
<p class="noindent">You can use custom or AWS managed rules to make sure that all your AWS resources comply with industry best practices. These can be customized based on your needs, and they start by comparing your resources and running an evaluation each time they are triggered. You can use the AWS Lambda function along with an AWS Config rule to evaluate whether all your AWS resources are in compliance. You can correct noncompliant resources using AWS Systems Manager Automation by using the AWS Management Console or by using APIs.</p>
<h4 class="h4" id="ch17lev2sec12">Monitoring AWS Config</h4>
<p class="noindent">Amazon CloudWatch events can be used to detect and correct changes based on AWS Config events, and Amazon SNS can be used to send notifications whenever an AWS resource is created, deleted, or updated based on user API activity. When you use Amazon VPC to host your AWS resources, you can create VPC endpoints to establish a private connection between your VPC and other AWS services, including AWS Config, without going through the Internet. The VPC endpoints use AWS PrivateLink, which enables private communication between your AWS services, and it also provides scalable and reliable connectivity to AWS Config without an Internet gateway, Network Address Translation (NAT) gateway, or virtual private network (VPN) connection.</p>
<p class="indent">You can capture all the API calls to AWS Config as events in CloudTrail. This will help you determine who made the request, from where, and when it was made. You can enable CloudTrail on your AWS account to record activity that occurs in AWS Config, along with other AWS services events, in Event History. CloudTrail records all the ongoing events, including events for AWS Config, in your AWS account and stores the log files in an Amazon S3 bucket. You can log events from all regions and configure them using other AWS services, and you can analyze and resolve the events from your CloudTrail logs.</p>
<h3 class="h3" id="ch17lev1sec4">Chapter Review</h3>
<p class="noindent">This chapter began by explaining how to monitor all your AWS services using Amazon CloudWatch. It then discussed how to record all API calls using AWS CloudTrail and explained how to track configuration changes to your AWS resources using AWS Config. You can monitor, collect, and track metrics; create alarms; and use dashboards to display all the metrics using Amazon CloudWatch in real time. You can create thresholds for your applications and monitor them using Amazon CloudWatch and send notifications when a threshold is reached. AWS resource utilization, health, and performance data can be used to scale down underused instances or scale up overutilized instances automatically and save money. The AWS console, AWS CLI, AWS SDKs, or Amazon CloudWatch API can be used to access Amazon CloudWatch. You can send alert messages using Amazon SNS to all subscribed clients when an alarm threshold is reached. Amazon EC2 Auto Scaling can utilize Amazon CloudWatch to automatically launch new instances based on user-defined policies, to terminate existing Amazon EC2 instances based on health status checks, or to scale up your Amazon EC2 instances based on demand.</p>
<p class="indent">AWS CloudTrail is used to record all API calls, which provides operational governance, compliance, and help auditing the risks to your AWS account. All actions and events in <span epub:type="pagebreak" id="page_449"/>the AWS Management Console, AWS CLI, AWS SDKs, and API calls to any of your AWS services are recorded in CloudTrail. AWS CloudTrail is enabled automatically when you create your AWS account and starts recording activities in an event that can be viewed in Event History. CloudTrail records all ongoing activities and events in your AWS account in your specified S3 bucket. Complete visibility of all the activities into your AWS account for security best practices can be achieved using AWS CloudTrail as well. You can view, search, download, archive, analyze, and respond to all activities across your AWS infrastructure. This helps you determine who or what service took a particular action on what resources, in addition to identifying when the event occurred, in order to help you analyze and respond to activity in your AWS account. AWS CloudTrail Insights can be enabled on a trail for an additional cost to identify and respond to any unusual activity.</p>
<p class="indent">All configuration changes or relationship changes to your AWS services over time can be captured and tracked using AWS Config. Your desired configurations can be evaluated against the current configurations using a snapshot. All AWS resources of your account or only few can be retrieved, based on your audit requirements, using AWS Config, in addition to retrieving historical configurations and relationships between your AWS resources. Identifying the configuration of all AWS resources in your AWS account is important, in addition to determining how they are related to each other and identifying how each AWS resource is configured both in the present and in the past. You can receive a notification whenever a resource configuration is changed, like create, modify, or delete. AWS Config helps you oversee your application resource configurations and detect any misconfigurations. AWS Config enables you to continuously evaluate and notify whenever resources are created, modified, or deleted by polling the calls made to each resource without explicitly monitoring these changes. AWS Config also evaluates the configuration settings and sends a notification when it detects any resource violation and flags the resource as noncompliant. AWS Config can be used to audit your AWS environment frequently to make sure it complies with the historical configurations based on your internal policies and best practices.</p>
<h4 class="h4" id="ch17lev2sec13">Exercises</h4>
<p class="noindent">The following exercises will help you practice using Amazon CloudWatch alarms, AWS CloudTrail, and AWS Config. You need to create an AWS account, as explained earlier, to perform these exercises. You can use the Free Tier when launching AWS resources, but make sure to terminate them at the end.</p>
<h5 class="h5">Exercise 17-1: Create a CloudWatch Alarm Using the AWS Management Console</h5>
<p class="numbert"><strong>1.</strong> Use your AWS account e-mail address and password to sign in and then navigate to the Amazon CloudWatch console at <a href="https://console.aws.amazon.com/cloudwatch">https://console.aws.amazon.com/cloudwatch</a>.</p>
<p class="number"><strong>2.</strong> Verify the AWS region by using the Region selector in the upper-right corner of the page.</p>
<p class="number"><strong>3.</strong> From the navigation pane on the left, choose Alarms, and select Create Alarm.</p>
<p class="number"><strong>4.</strong> <span epub:type="pagebreak" id="page_450"/>Choose Select Metric and choose the service namespace based on the metric that you want.</p>
<p class="number"><strong>5.</strong> Continue drilling down to narrow your choices and select the checkbox next to the metric that you want.</p>
<p class="number"><strong>6.</strong> From the search box, enter the name of a metric, resource ID, or dimension and press <span class="smallcaps">enter</span>.</p>
<p class="number"><strong>7.</strong> Choose one of the results and continue until a list of metrics appears.</p>
<p class="number"><strong>8.</strong> Select the checkbox next to the metric that you want.</p>
<p class="number"><strong>9.</strong> Choose the Graphed Metrics tab.</p>
<p class="number1"><strong>10.</strong> Choose one of the statistics under Statistic.</p>
<p class="number1"><strong>11.</strong> Choose the evaluation period for the alarm under Period.</p>
<p class="number1"><strong>12.</strong> When creating the alarm, select whether the y-axis legend appears on the left or right.</p>
<p class="number1"><strong>13.</strong> Choose Select metric. Specify the Metric And Conditions page.</p>
<p class="number1"><strong>14.</strong> Under Conditions, enter a name and description for the alarm and specify the threshold value.</p>
<p class="number1"><strong>15.</strong> Choose Additional Configuration and specify how many evaluation periods.</p>
<p class="number1"><strong>16.</strong> Choose how to have the alarm behave when some data points are missing for the Missing Data Treatment field.</p>
<p class="number1"><strong>17.</strong> Choose Next.</p>
<p class="number1"><strong>18.</strong> Select an SNS topic under Notification to notify when the alarm is in ALARM state, OK state, or INSUFFICIENT_DATA state.</p>
<p class="number1"><strong>19.</strong> Choose Add Notification and choose Next.</p>
<p class="number1"><strong>20.</strong> Enter a name and description for the alarm and choose Next.</p>
<p class="number1"><strong>21.</strong> Preview all the details and then choose Create Alarm.</p>
<h5 class="h5">Exercise 17-2: Create a CloudTrail Trail Using the AWS Management Console</h5>
<p class="numbert"><strong>1.</strong> Use your AWS account e-mail address and password to sign in and then navigate to the AWS CloudTrail console at <a href="https://console.aws.amazon.com/cloudtrail/">https://console.aws.amazon.com/cloudtrail/</a>.</p>
<p class="number"><strong>2.</strong> Verify the AWS region by using the Region selector in the upper-right corner of the page.</p>
<p class="number"><strong>3.</strong> In the left navigation pane, choose Trails.</p>
<p class="number"><strong>4.</strong> From the Trails page, choose Get Started Now or Create Trail.</p>
<p class="number"><strong>5.</strong> Give your new trail a name, like <strong>My-First-Trail</strong>.</p>
<p class="number"><strong>6.</strong> From the Management Events, set Read/Write Events to All.</p>
<p class="number"><strong>7.</strong> Leave the default Yes selected for Log AWS KMS Events.</p>
<p class="number"><strong>8.</strong> <span epub:type="pagebreak" id="page_451"/>Do not make any changes in Data Events so that your new trail will not log any data events.</p>
<p class="number"><strong>9.</strong> At the Storage Location section of Create A New S3 Bucket, choose Yes and give it a name like <strong>s3-cloudtrail-logs</strong>.</p>
<p class="number1"><strong>10.</strong> In the Tags section, enter <strong>name</strong> for the key and <strong>trail</strong> for the value.</p>
<p class="number1"><strong>11.</strong> Choose Create.</p>
<h5 class="h5">Exercise 17-3: Set Up AWS Config Using the AWS Management Console</h5>
<p class="numbert"><strong>1.</strong> Use your AWS account e-mail address and password to sign in and then navigate to the AWS Config console at <a href="https://console.aws.amazon.com/config/">https://console.aws.amazon.com/config/</a>.</p>
<p class="number"><strong>2.</strong> Verify the AWS region by using the Region selector in the upper-right corner of the page.</p>
<p class="number"><strong>3.</strong> Click on the Get Started Now button.</p>
<p class="number"><strong>4.</strong> From the Settings page, for Resource Types To Record, specify All Resources so that AWS Config automatically starts recording resources. Optionally, you can include global resources like IAM resources.</p>
<p class="number"><strong>5.</strong> Select Specific Types only if you need to record configuration changes for specific AWS resource types.</p>
<p class="number"><strong>6.</strong> Then you can either create a new bucket or choose an existing bucket from your account or from another account.</p>
<p class="number"><strong>7.</strong> Choose Stream Configuration Changes And Notifications To An Amazon SNS Topic and choose the target topic by either creating new topic or choosing a topic from your account by providing the ARN.</p>
<p class="number"><strong>8.</strong> For AWS Config Role, you need to choose the IAM role by either creating a new role or choosing a role from your account.</p>
<p class="number"><strong>9.</strong> Choose Next And Save. Verify that AWS Config displays on the Resource Inventory page.</p>
<h4 class="h4" id="ch17lev2sec14">Questions</h4>
<p class="noindent">The following questions will help you gauge your understanding of the contents in this chapter. Read all the answers carefully because there might be more than one correct answer. Choose the best response for each question.</p>
<p class="numbert"><strong><a href="ch17.xhtml#rch17qa1" id="ch17qa1">1.</a></strong> A customer needs to monitor the CPU utilization percentage of their AWS EC2 instance and send real-time alerts to their on-call support team. Which two AWS services can accomplish this? (Choose two.)</p>
<p class="alphau"><strong>A.</strong> Amazon CloudWatch</p>
<p class="alphau"><strong>B.</strong> Amazon Simple Queue Service</p>
<p class="alphau"><strong>C.</strong> Amazon Route 53</p>
<p class="alphau"><strong>D.</strong> Amazon Simple Notification Service</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa2" id="ch17qa2">2.</a></strong> <span epub:type="pagebreak" id="page_452"/>Your company wants you to analyze traffic patterns for your application. You need to capture all connection information from your load balancer every 15 minutes. Which solution will enable you to do this?</p>
<p class="alphau"><strong>A.</strong> Enable access logs on the load balancer</p>
<p class="alphau"><strong>B.</strong> Create a detailed custom metric CloudWatch on your load balancer</p>
<p class="alphau"><strong>C.</strong> Use a CloudWatch logs agent</p>
<p class="alphau"><strong>D.</strong> Use AWS CloudTrail with your load balancer</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa3" id="ch17qa3">3.</a></strong> Your client wants you to automatically launch or terminate Amazon EC2 instances based on health status checks. What tool can you use with Amazon EC2 Auto Scaling to scale your EC2 instances based on demand?</p>
<p class="alphau"><strong>A.</strong> CloudWatch alarm</p>
<p class="alphau"><strong>B.</strong> CloudTrail</p>
<p class="alphau"><strong>C.</strong> CloudFormation</p>
<p class="alphau"><strong>D.</strong> CloudFront</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa4" id="ch17qa4">4.</a></strong> Which of the following could be scheduled and monitored only by using a custom CloudWatch metric?</p>
<p class="alphau"><strong>A.</strong> EC2 network IO</p>
<p class="alphau"><strong>B.</strong> EC2 disk IO</p>
<p class="alphau"><strong>C.</strong> EC2 CPU utilization</p>
<p class="alphau"><strong>D.</strong> EC2 memory utilization</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa5" id="ch17qa5">5.</a></strong> What is the minimum time interval that Amazon CloudWatch receives and aggregates data?</p>
<p class="alphau"><strong>A.</strong> 15 seconds</p>
<p class="alphau"><strong>B.</strong> 1 minute</p>
<p class="alphau"><strong>C.</strong> 3 minutes</p>
<p class="alphau"><strong>D.</strong> 5 minutes</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa6" id="ch17qa6">6.</a></strong> Your company wants to understand, improve, and debug the applications by viewing and searching their logs. Which of the following provides an interactive, pay-as-you-go, and integrated log analytics capability?</p>
<p class="alphau"><strong>A.</strong> CloudWatch Logs Insights</p>
<p class="alphau"><strong>B.</strong> Direct Connect</p>
<p class="alphau"><strong>C.</strong> Virtual Private Cloud (VPC)</p>
<p class="alphau"><strong>D.</strong> CloudTrail</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa7" id="ch17qa7">7.</a></strong> <span epub:type="pagebreak" id="page_453"/>True or False: You can find the root cause of an issue by accessing the metrics data for a terminated Amazon EC2 instance and its deleted Elastic Load Balancer.</p>
<p class="alphau"><strong>A.</strong> True</p>
<p class="alphau"><strong>B.</strong> False</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa8" id="ch17qa8">8.</a></strong> What resolution granularities can you get from a custom metric? (Choose two.)</p>
<p class="alphau"><strong>A.</strong> Standard resolution with one-minute data granularity</p>
<p class="alphau"><strong>B.</strong> High resolution with one-second granularity</p>
<p class="alphau"><strong>C.</strong> Medium resolution with three-minute data granularity</p>
<p class="alphau"><strong>D.</strong> Default resolution with five-minute data granularity</p>
<p class="number"><strong><a href="ch17.xhtml#rch17qa9" id="ch17qa9">9.</a></strong> True or False: You can set up Amazon CloudWatch metric filters to use regular expressions with the log data.</p>
<p class="alphau"><strong>A.</strong> True</p>
<p class="alphau"><strong>B.</strong> False</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa10" id="ch17qa10">10.</a></strong> Your audit team wants to have access to logs insights. Which two IAM policies must be included to access this? (Choose two.)</p>
<p class="alphau"><strong>A.</strong> logs:DescribeLogGroups</p>
<p class="alphau"><strong>B.</strong> logs:FilterLogEvents</p>
<p class="alphau"><strong>C.</strong> logs:GrantAccess</p>
<p class="alphau"><strong>D.</strong> logs:FullAccess</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa11" id="ch17qa11">11.</a></strong> Your development team is configuring the Amazon CloudWatch logs to monitor, store, and access your log files from Amazon EC2 instances. What is the default retention period for the logs?</p>
<p class="alphau"><strong>A.</strong> Never expire</p>
<p class="alphau"><strong>B.</strong> 1 day</p>
<p class="alphau"><strong>C.</strong> 10 years</p>
<p class="alphau"><strong>D.</strong> 455 days</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa12" id="ch17qa12">12.</a></strong> Your company needs to track all API calls made to Amazon CloudWatch. Which service will help you to monitor and track this?</p>
<p class="alphau"><strong>A.</strong> CloudTrail</p>
<p class="alphau"><strong>B.</strong> IAM</p>
<p class="alphau"><strong>C.</strong> S3</p>
<p class="alphau"><strong>D.</strong> Route 53</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa13" id="ch17qa13">13.</a></strong> <span epub:type="pagebreak" id="page_454"/>Which two services provide detailed monitoring metrics without incurring extra charges? (Choose two.)</p>
<p class="alphau"><strong>A.</strong> RDS</p>
<p class="alphau"><strong>B.</strong> Route 53</p>
<p class="alphau"><strong>C.</strong> CloudFront</p>
<p class="alphau"><strong>D.</strong> VPC</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa14" id="ch17qa14">14.</a></strong> True or False: When using CloudWatch logs to monitor applications running in the EC2 instance, the log data is encrypted while in transit and while at rest.</p>
<p class="alphau"><strong>A.</strong> True</p>
<p class="alphau"><strong>B.</strong> False</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa15" id="ch17qa15">15.</a></strong> You team wants to build a system that sends data to Amazon CloudWatch every six minutes for tracking and monitoring. Which of the following is required as part of the put-metric-data request?</p>
<p class="alphau"><strong>A.</strong> Key</p>
<p class="alphau"><strong>B.</strong> Namespace</p>
<p class="alphau"><strong>C.</strong> Metric name</p>
<p class="alphau"><strong>D.</strong> Timestamp</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa16" id="ch17qa16">16.</a></strong> You configured a custom metric in Amazon S3 with CloudWatch and granted permission to your team members to upload data using CLI. Is it possible to track your team members’ activities?</p>
<p class="alphau"><strong>A.</strong> Yes, you need to enable logging in CloudWatch to capture the activities</p>
<p class="alphau"><strong>B.</strong> No, the S3 bucket uploads cannot be captured</p>
<p class="alphau"><strong>C.</strong> Yes, but you need to enable detailed monitoring of Amazon CloudWatch</p>
<p class="alphau"><strong>D.</strong> Yes, you can use CloudTrail to monitor the API calls</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa17" id="ch17qa17">17.</a></strong> You are using CloudTrail to record details about each action like who made a request, from where, what services are used, which actions are performed, and the response elements returned by the AWS service. When troubleshooting an issue, what search filters can you use along with time range to view account activity? (Choose all that apply.)</p>
<p class="alphau"><strong>A.</strong> Event name</p>
<p class="alphau"><strong>B.</strong> Username</p>
<p class="alphau"><strong>C.</strong> Resource name</p>
<p class="alphau"><strong>D.</strong> Event source</p>
<p class="alphau"><strong>E.</strong> Event ID</p>
<p class="alphau"><strong>F.</strong> Resource type</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa18" id="ch17qa18">18.</a></strong> <span epub:type="pagebreak" id="page_455"/>Which of the following contains the AWS CloudTrail configuration item (CI) that refers to the resource configuration at a given point in time? (Choose all that apply.)</p>
<p class="alphau"><strong>A.</strong> Basic information like ARNs and tags</p>
<p class="alphau"><strong>B.</strong> Configuration data like EC2 instance type</p>
<p class="alphau"><strong>C.</strong> Mapping relationships</p>
<p class="alphau"><strong>D.</strong> AWS CloudTrail event ID</p>
<p class="alphau"><strong>E.</strong> Metadata like version of the CI and when it was captured</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa19" id="ch17qa19">19.</a></strong> You can use the AWS Config dashboard to evaluate which of the following against your configuration?</p>
<p class="alphau"><strong>A.</strong> Assess your overall compliance</p>
<p class="alphau"><strong>B.</strong> Risk status from a configuration perspective</p>
<p class="alphau"><strong>C.</strong> View compliance trends over time</p>
<p class="alphau"><strong>D.</strong> Use a rule to identify compliance drift that is caused by configuration change</p>
<p class="number1"><strong><a href="ch17.xhtml#rch17qa20" id="ch17qa20">20.</a></strong> Your central IT administrators team needs to monitor compliance for all AWS accounts in the enterprise. How can you aggregate AWS Config data from multiple accounts and regions into a single account?</p>
<p class="alphau"><strong>A.</strong> Use multiaccount, multiregion data aggregation</p>
<p class="alphau"><strong>B.</strong> Create multiple S3 buckets</p>
<p class="alphau"><strong>C.</strong> Create multiple IAM roles</p>
<p class="alphau"><strong>D.</strong> Use single-account data aggregation</p>
<h4 class="h4" id="ch17lev2sec15">Answers</h4>
<p class="numbert"><strong><a href="ch17.xhtml#ch17qa1" id="rch17qa1">1.</a> A, D.</strong> Amazon CloudWatch will be used to monitor the CPU utilization percentage of the AWS EC2 instance, and SNS will be used send real-time alerts to the on-call support team.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa2" id="rch17qa2">2.</a> A.</strong> Since the requirement is to get the information every 15 minutes, the basic CloudWatch metric will provide this.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa3" id="rch17qa3">3.</a> A.</strong> A CloudWatch alarm along with Amazon EC2 Auto Scaling will be used to scale your EC2 instances based on demand.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa4" id="rch17qa4">4.</a> D.</strong> Memory utilization will be provided by using the custom CloudWatch metrics. The metrics are available with basic monitoring.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa5" id="rch17qa5">5.</a> B.</strong> One minute is the minimum amount of time the Amazon CloudWatch receives and aggregates the data.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa6" id="rch17qa6">6.</a> A.</strong> Using CloudWatch Logs Insights, you can understand, improve, and debug applications using an interactive, pay-as-you-go, and integrated log analytics capability.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa7" id="rch17qa7">7.</a></strong> <span epub:type="pagebreak" id="page_456"/><strong>A.</strong> True, the data will be available for 15 months.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa8" id="rch17qa8">8.</a> A, B.</strong> The standard resolution with one-minute data granularity and high resolution with one-second granularity.</p>
<p class="number"><strong><a href="ch17.xhtml#ch17qa9" id="rch17qa9">9.</a> B.</strong> False, it’s not supported. Amazon Kinesis could be used to connect the stream with a regular expression processing engine.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa10" id="rch17qa10">10.</a> A, B.</strong> The logs:DescribeLogGroups and logs:FilterLogEvents are valid IAM policies that can be used to gain access.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa11" id="rch17qa11">11.</a> A.</strong> The logs never expire, but you can change the retention period from one day to ten years.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa12" id="rch17qa12">12.</a> A.</strong> CloudTrail will help monitor and track the API calls.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa13" id="rch17qa13">13.</a> A, B.</strong> The Relational Database Service (RDS) and Route 53 send the detailed monitoring metrics without incurring extra charges.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa14" id="rch17qa14">14.</a> A.</strong> True, the log data is encrypted while in transit and while it is at rest.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa15" id="rch17qa15">15.</a> B.</strong> put-metric-data publishes metric data points to Amazon CloudWatch, which associates the data points with the specified metric namespace</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa16" id="rch17qa16">16.</a> D.</strong> Yes, you just need to enable CloudTrail to monitor the API calls.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa17" id="rch17qa17">17.</a> A, B, C, D, E, F.</strong> You can use all these attributes along with the time range.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa18" id="rch17qa18">18.</a> A, B, C, D, E.</strong> These are the CI sections.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa19" id="rch17qa19">19.</a> A, B, C, D.</strong> You can assess, view, and find the status from dashboard.</p>
<p class="number1"><strong><a href="ch17.xhtml#ch17qa20" id="rch17qa20">20.</a> A.</strong> You need to use multiaccount, multiregion data aggregation.</p>
<h3 class="h3" id="ch17lev1sec5">Additional Resources</h3>
<p class="bullett">• <strong>Amazon CloudWatch</strong>   The recommended documentation for any AWS services, including Amazon CloudWatch, is the official AWS documentation, where you always can get the most up-to-date information.</p>
<p class="bulletc"><img alt="images" src="p0456-01.jpg"/></p>
<p class="bulleta">• <strong>AWS CloudTrail</strong>   The one-stop shop to find up-to-date details about all the new features of any AWS services, including AWS CloudTrail, is the official AWS documentation.</p>
<p class="bulletc"><img alt="images" src="p0456-02.jpg"/></p>
<p class="bulleta">• <strong>AWS Config</strong>   There is no other place to get the latest information about any AWS services, including AWS Config, other than the official AWS documentation.</p>
<p class="bulletc"><img alt="images" src="p0456-03.jpg"/></p>
</section>
</body>
</html>